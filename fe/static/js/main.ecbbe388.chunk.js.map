{"version":3,"sources":["white-logo.png","api.js","components/Axis.js","components/AltitudeGraph.js","pages/Home.js","pages/other.js","pages/Launches.js","pages/Launch.js","components/Actions.js","components/Notifications.js","pages/Strategies.js","App.js","index.js"],"names":["module","exports","base","localStorage","baseUrl","concat","socket","io","secure","emit","arguments","async","getLaunches","data","axios","get","map","launch","now","Date","date","getTime","format","formatDistance","filename","display","sort","a","b","compareDesc","getClosestAltitude","altitudeData","timestamp","reduce","prev","curr","Math","abs","useSocket","_len","length","args","Array","_key","useEffect","on","off","console","log","Axis","_ref","className","axis","translate","axisEl","useRef","select","current","call","React","createElement","Fragment","ref","transform","join","margin","height","AltitudeGraph","altitude","events","strategyData","showEvents","setShowEvents","useState","showStrategy","setShowStrategy","innerWidth","useWindowSize","width","x","scaleTime","range","y","scaleLinear","xAxis","axisBottom","yAxis","axisLeft","line","d3Line","curve","curveBasisOpen","d","domain","extent","e","i","evt","class","cx","cy","r","event","payload","Box","pad","CheckBox","checked","label","onChange","target","Index","rocketData","setRocketData","newData","newArr","slice","max","style","flexDirection","flex","Other","Launches","launches","setLaunches","then","deleteIt","delete","deleteLaunch","Heading","level","key","Link","to","Button","onClick","FormClose","Launch","match","params","launchData","setLaunchData","eventData","strategy","getLaunch","catch","error","direction","justify","align","_ref2","parseInt","maxAltitude","Actions","isArmed","setIsArmed","isDeployed","setIsDeployed","isLaunched","setIsLaunched","parachuteDeployed","parachuteArmed","wrap","color","primary","Notifications","showNotification","title","message","type","notificationType","toast","TYPE","toUpperCase","ToastContainer","Strategies","strategies","setStrategies","activeStrategies","setActiveStrategies","filter","strat","enabled","border","size","name","toggleStrategy","left","Object","keys","props","prop","displayName","FormField","TextInput","value","default","updateStrategy","rawValue","strategyKey","AppBar","assign","tag","background","right","vertical","elevation","zIndex","App","setBaseState","connected","setConnected","theme","global","colors","green","red","font","family","brand","Grommet","Router","src","Logo","alt","alignSelf","id","placeholder","newBase","window","location","reload","Switch","Route","exact","path","component","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecbbe388.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/white-logo.fcac99b0.png\";","import { useEffect } from 'react'\nimport io from 'socket.io-client'\nimport axios from 'axios'\nimport { compareDesc, formatDistance, format } from 'date-fns'\n\nlet base = localStorage.base || '0.0.0.0'\nlet baseUrl = `https://${base}`\nexport const getBase = () => {\n  return base\n}\n\nexport const setBase = newBase => {\n  localStorage.base = newBase\n  return (base = newBase)\n}\n\nexport const socket = io(baseUrl, { secure: true })\n\nexport const emit = (...args) => {\n  socket.emit(...args)\n}\n// export const socket = io(\"http://localhost:4000\");\n\nsocket.on('connect', () => console.log('connected'))\nsocket.on('disconnect', () => console.log('disconnected'))\nsocket.on('strategy-log', console.log)\n\nexport function transform (d) {\n  if (!d.altitude) return false\n\n  return {\n    timestamp: new Date(d.timestamp * 1000),\n    altitude: d.altitude\n  }\n}\n\nexport async function getLaunches () {\n  const { data } = await axios.get(`${baseUrl}/launches`)\n  return data\n    .map(launch => {\n      const now = new Date()\n      let date = new Date(launch)\n\n      if (now.getTime() - date.getTime() > 1000 * 60 * 60 * 24 * 2) {\n        date = format(date, 'MMM do yyyy h:mmb')\n      } else {\n        date = formatDistance(date, now)\n      }\n      return {\n        filename: launch,\n        display: date,\n        date: new Date(launch)\n      }\n    })\n    .sort((a, b) => compareDesc(a.date, b.date))\n}\n\nfunction getClosestAltitude (altitudeData, timestamp) {\n  return altitudeData.reduce((prev, curr) =>\n    Math.abs(curr.timestamp - timestamp) < Math.abs(prev.timestamp - timestamp)\n      ? curr\n      : prev\n  )\n}\n\nexport async function getLaunch (filename) {\n  const {\n    data: { altitudeData, events, strategyData }\n  } = await axios.get(`${baseUrl}/launch/${filename}`)\n\n  const eventData = events.map(evt => {\n    const { altitude } = getClosestAltitude(altitudeData, evt.timestamp)\n    return { ...evt, altitude }\n  })\n  const strategy = strategyData.map(evt => {\n    const { altitude } = getClosestAltitude(altitudeData, evt.timestamp)\n    return { ...evt, altitude }\n  })\n\n  return {\n    altitude: altitudeData,\n    events: eventData,\n    strategyData: strategy\n  }\n}\n\nexport async function deleteLaunch (filename) {\n  await axios.delete(`${baseUrl}/launch/${filename}`)\n  return true\n}\n\nexport function useSocket (...args) {\n  useEffect(() => {\n    socket.on(...args)\n    return () => socket.off(...args)\n  }, [args])\n}\n","import React, { useRef, useEffect } from \"react\";\nimport { select } from \"d3-selection\";\n\nexport default function Axis({ className, axis, translate = [0, 0] }) {\n  const axisEl = useRef(null);\n\n  useEffect(() => {\n    select(axisEl.current).call(axis);\n  }, [axisEl, axis]);\n\n  return (\n    <>\n      <g\n        className={className}\n        ref={axisEl}\n        transform={`translate(${translate.join(\",\")})`}\n      />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { axisLeft, axisBottom } from \"d3-axis\";\nimport { scaleTime, scaleLinear } from \"d3-scale\";\nimport { line as d3Line, curveBasisOpen } from \"d3-shape\";\nimport { extent } from \"d3-array\";\nimport \"./graph.css\";\nimport Axis from \"./Axis\";\nimport { CheckBox, Box } from \"grommet\";\nimport useWindowSize from \"@rehooks/window-size\";\n\nvar margin = { top: 20.5, right: 30, bottom: 30, left: 40.5 },\n  height = 500 - margin.top - margin.bottom;\n\nexport default function AltitudeGraph({ altitude = [], events, strategyData }) {\n  const [showEvents, setShowEvents] = useState(true);\n  const [showStrategy, setShowStrategy] = useState(false);\n\n  const { innerWidth } = useWindowSize();\n  const width = innerWidth - margin.left - margin.right;\n\n  var x = scaleTime().range([0, width]);\n  var y = scaleLinear().range([height, 0]);\n\n  const xAxis = axisBottom(x);\n  const yAxis = axisLeft(y);\n\n  const line = d3Line()\n    .curve(curveBasisOpen)\n    .x(d => x(d.timestamp))\n    .y(d => y(d.altitude));\n\n  x.domain(extent(altitude, d => d.timestamp));\n  y.domain(\n    extent(altitude, d => d.altitude).map((e, i) => {\n      if (!e) return false;\n      if (i === 0) {\n        return e - 5;\n      }\n      return e + 5;\n    })\n  );\n\n  return (\n    <div>\n      <svg\n        width={width + margin.left + margin.right}\n        height={height + margin.top + margin.bottom}\n      >\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <Axis className=\"x axis\" axis={xAxis} translate={[0, height]} />\n          <Axis className=\"y axis\" axis={yAxis} />\n          <path className=\"line\" d={line(altitude)} />\n          {showEvents &&\n            events &&\n            events.map(evt => (\n              <g\n                class=\"event\"\n                transform={`translate(${x(evt.timestamp)},${y(evt.altitude)})`}\n              >\n                <circle cx=\"-2.5\" cy=\"2.5\" r=\"5\" />\n                <text x=\"-20\" y=\"20\">\n                  {evt.event}\n                </text>\n              </g>\n            ))}\n          {showStrategy &&\n            strategyData &&\n            strategyData.map((evt, i) => (\n              <g\n                class=\"event\"\n                transform={`translate(${x(evt.timestamp)},${y(evt.altitude)})`}\n              >\n                <circle cx=\"-2.5\" cy=\"2.5\" r=\"5\" />\n                <text x=\"-20\" y={-(i + 1) * 14}>\n                  {evt.payload}\n                </text>\n              </g>\n            ))}\n        </g>\n      </svg>\n      {strategyData && (\n        <Box pad=\"xsmall\">\n          <CheckBox\n            checked={showStrategy}\n            label=\"Show Strategy Data\"\n            onChange={event => setShowStrategy(event.target.checked)}\n          />\n        </Box>\n      )}\n      {events && (\n        <Box pad=\"xsmall\">\n          <CheckBox\n            checked={showEvents}\n            label=\"Show Launch and Parachute\"\n            onChange={event => setShowEvents(event.target.checked)}\n          />\n        </Box>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport { useSocket, transform } from '../api'\nimport AltitudeGraph from '../components/AltitudeGraph'\nimport { Box } from 'grommet'\nfunction Index () {\n  const [rocketData, setRocketData] = useState([])\n\n  useSocket('rocket-data', newData => {\n    const d = transform(newData)\n\n    setRocketData(data => {\n      const newArr = [...data, d]\n      if (newArr.length > 800) {\n        return newArr.slice(Math.max(newArr.length - 800, 1))\n      }\n      return newArr\n    })\n  })\n  return (\n    <Box margin='medium'>\n      <h1>Altitude Graph</h1>\n      <Box style={{ display: 'flex', flexDirection: 'row' }}>\n        <AltitudeGraph style={{ flex: 1 }} altitude={rocketData} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Index\n","import React from 'react';\n\nfunction Other() {\n  return (\n    <div>\n      <h1>Other</h1>\n    </div>\n  );\n}\n\nexport default Other;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSocket, getLaunches, deleteLaunch } from \"../api\";\nimport { Heading, Button } from \"grommet\";\nimport { FormClose } from \"grommet-icons\";\nfunction Launches() {\n  const [launches, setLaunches] = useState([]);\n  useEffect(() => {\n    getLaunches().then(setLaunches);\n  }, []);\n  const deleteIt = async launch => {\n    await deleteLaunch(launch);\n    getLaunches().then(setLaunches);\n  };\n  useSocket(\"launch-recorded\", () => {\n    getLaunches().then(setLaunches);\n  });\n  return (\n    <div>\n      <Heading level=\"2\" margin=\"medium\">\n        Launches\n      </Heading>\n      <ul>\n        {launches.length\n          ? launches.map(launch => (\n              <li key={launch}>\n                <Link to={`/launch/${launch.filename}`}>{launch.display}</Link>\n                <Button onClick={() => deleteIt(launch.filename)}>\n                  <FormClose />\n                </Button>\n              </li>\n            ))\n          : \"No Launches yet.\"}\n      </ul>\n    </div>\n  );\n}\n\nexport default Launches;\n","import React, { useState, useEffect } from \"react\";\nimport { getLaunch } from \"../api\";\nimport AltitudeGraph from \"../components/AltitudeGraph\";\nimport { Box, Heading } from \"grommet\";\n\nexport default function Launch({ match }) {\n  const {\n    params: { filename }\n  } = match;\n\n  const [launchData, setLaunchData] = useState();\n\n  useEffect(() => {\n    getLaunch(filename)\n      .then(setLaunchData)\n      .catch(console.error);\n  }, [filename]);\n\n  const maxAltitude = launchData => {\n    if (!launchData) return 0;\n    const max = launchData.altitude.reduce(\n      (curr, { altitude }) => Math.max(curr, altitude),\n      0\n    );\n    return parseInt(max - launchData.events[0].altitude, 10);\n  };\n  return (\n    <div>\n      <Box direction=\"row\" justify=\"between\" pad=\"small\" align=\"center\">\n        <Heading level=\"3\" margin=\"none\">\n          Launch {filename}\n        </Heading>\n        <Heading level=\"4\" margin=\"none\">\n          Max Altitude: {maxAltitude(launchData)}ft\n        </Heading>\n      </Box>\n      {launchData && (\n        <AltitudeGraph\n          altitude={launchData.altitude}\n          events={launchData.events}\n          strategyData={launchData.strategyData}\n        ></AltitudeGraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport { emit, useSocket } from '../api'\nimport { Button, Box, Heading } from 'grommet'\nexport default function Actions () {\n  const [isArmed, setIsArmed] = useState()\n  const [isDeployed, setIsDeployed] = useState()\n  const [isLaunched, setIsLaunched] = useState()\n\n  useSocket('status', ({ parachuteDeployed, parachuteArmed, isLaunched }) => {\n    setIsArmed(parachuteArmed)\n    setIsDeployed(parachuteDeployed)\n    setIsLaunched(isLaunched)\n  })\n\n  return (\n    <>\n      <Heading level='3' margin='medium'>\n        Actions\n      </Heading>\n      <Box direction='row' margin='medium' align='center' wrap>\n        {isArmed ? (\n          <Button\n            margin='xsmall'\n            label='Disarm Parachute'\n            color='red'\n            primary\n            onClick={() => emit('disarm-parachute')}\n          />\n        ) : (\n          <Button\n            margin='xsmall'\n            label='Arm Parachute & Start Camera'\n            color='green'\n            primary\n            onClick={() => emit('arm-parachute')}\n          />\n        )}\n        {isDeployed ? (\n          <Button\n            margin='xsmall'\n            label='Reset Parachute'\n            color='red'\n            primary\n            onClick={() => emit('reset-parachute')}\n          />\n        ) : (\n          <Button\n            margin='xsmall'\n            label='Deploy Parachute'\n            color='green'\n            primary\n            onClick={() => emit('deploy-parachute')}\n          />\n        )}\n        {isLaunched ? (\n          <Button\n            margin='xsmall'\n            label='Abort launch'\n            color='red'\n            primary\n            onClick={() => emit('abort-launch')}\n          />\n        ) : (\n          <Button\n            margin='xsmall'\n            label='🚀Launch'\n            onClick={() => emit('launch')}\n          />\n        )}\n      </Box>\n    </>\n  )\n}\n","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { useSocket } from \"../api\";\n\nexport default function Notifications() {\n  const showNotification = ({ title, message, type = \"info\" }) => {\n    const notificationType = toast.TYPE[type.toUpperCase()];\n\n    toast(title, { type: notificationType });\n  };\n  useSocket(\"launched\", () => {\n    showNotification({ title: \"Launched!\", type: \"success\" });\n  });\n  useSocket(\"parachute-deployed\", () => {\n    showNotification({\n      title: \"Parachute Deployed!\",\n      type: \"success\"\n    });\n  });\n  useSocket(\"parachute-armed\", () => {\n    showNotification({\n      title: \"Parachute Armed!\",\n      type: \"info\"\n    });\n  });\n  useSocket(\"parachute-disarmed\", () => {\n    showNotification({\n      title: \"Parachute Disarmed!\",\n      type: \"warning\"\n    });\n  });\n  useSocket(\"launch-recorded\", () => {\n    showNotification({\n      title: \"New Launch Recorded!\",\n      type: \"info\"\n    });\n  });\n  return (\n    <>\n      <ToastContainer />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSocket, emit } from \"../api\";\nimport { TextInput, Heading, Box, CheckBox, FormField } from \"grommet\";\n\nexport default function Strategies() {\n  const [strategies, setStrategies] = useState([]);\n  const [activeStrategies, setActiveStrategies] = useState([]);\n\n  useSocket(\"strategy-data\", data => {\n    setStrategies(data);\n    setActiveStrategies(data.filter(strat => strat.data.enabled));\n  });\n\n  useEffect(() => {\n    emit(\"get-strategy-data\");\n  }, []);\n  const toggleStrategy = strategy => {\n    if (!strategy.data.enabled) {\n      emit(\"activate-strategy\", strategy.key);\n    } else {\n      emit(\"deactivate-strategy\", strategy.key);\n    }\n  };\n  const updateStrategy = (strategy, key, type, e) => {\n    const rawValue = type === \"boolean\" ? e.target.checked : e.target.value;\n    const value = type === \"number\" ? +rawValue : rawValue;\n    emit(\"update-strategy\", { strategyKey: strategy.key, key, value });\n  };\n\n  return (\n    <Box margin=\"medium\">\n      <Heading level=\"3\">Strategies</Heading>\n      <Box direction=\"row\">\n        <Box border={{ color: \"brand\", size: \"medium\" }} pad=\"medium\">\n          {strategies.map(strategy => (\n            <Box key={strategy.key} margin=\"xsmall\">\n              <CheckBox\n                checked={strategy.data.enabled}\n                label={strategy.name}\n                onChange={() => toggleStrategy(strategy)}\n              />\n            </Box>\n          ))}\n        </Box>\n        <Box\n          margin={{\n            left: \"medium\"\n          }}\n          border={{ color: \"brand\", size: \"medium\" }}\n          pad=\"medium\"\n        >\n          {activeStrategies.map(strategy => (\n            <Box key={strategy.key} margin=\"xsmall\">\n              <Heading level=\"4\" margin=\"none\">\n                {strategy.name}\n              </Heading>\n              {Object.keys(strategy.props).map(key => {\n                const prop = strategy.props[key];\n                return (\n                  <>\n                    {prop.type === \"boolean\" ? (\n                      <CheckBox\n                        checked={true}\n                        label={prop.displayName || key}\n                      ></CheckBox>\n                    ) : (\n                      <FormField label={prop.displayName || key} margin=\"none\">\n                        <TextInput\n                          margin=\"none\"\n                          value={strategy.data.props[key] || prop.default}\n                          onChange={evt =>\n                            updateStrategy(strategy, key, prop.type, evt)\n                          }\n                        />\n                      </FormField>\n                    )}\n                  </>\n                );\n              })}\n            </Box>\n          ))}\n        </Box>\n      </Box>\n      {/*<div class=\"strategies\">\n  <div>\n    <div v-for=\"strategy in activeStrategies\" :key=\"strategy.key\">\n      <h2>{{strategy.name}}</h2>\n      <ul>\n        <li v-for=\"(prop, key) in strategy.props\" :key=\"key\">\n          <label :title=\"prop.description\">{{prop.displayName || key}}:</label>\n          <input\n            :type=\"prop.type === 'boolean' ? 'checkbox' : 'text'\"\n            :value=\"key in strategy.data.props ? strategy.data.props[key] : prop.default\"\n            :checked=\"key in strategy.data.props ? strategy.data.props[key] : prop.default\"\n            @change=\"updateStrategy(strategy, key, prop.type, $event)\"\n          />\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>*/}\n    </Box>\n  );\n}\n","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Other from './pages/other'\nimport Launches from './pages/Launches'\nimport Launch from './pages/Launch'\nimport { Grommet, Box, TextInput, Button } from 'grommet'\nimport Actions from './components/Actions'\nimport Notifications from './components/Notifications'\nimport Strategies from './pages/Strategies'\nimport Logo from './white-logo.png'\nimport { setBase, getBase, useSocket } from './api'\nconst AppBar = props => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation='medium'\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n)\n\nfunction App () {\n  const [base, setBaseState] = useState(getBase())\n  const [connected, setConnected] = useState(false)\n\n  useSocket('connect', () => setConnected(true))\n  useSocket('disconnect', () => setConnected(false))\n\n  let theme = {\n    global: {\n      colors: {\n        green: '#43A047',\n        red: '#F4511E'\n      },\n      font: {\n        family: 'Roboto',\n        size: '14px',\n        height: '20px'\n      }\n    }\n  }\n\n  if (!connected) {\n    theme.global.colors = {\n      brand: '#666',\n      'accent-1': '#777',\n      'accent-2': '#777',\n      'accent-3': '#777',\n      'accent-4': '#777',\n      green: '#777',\n      red: '#777'\n    }\n  }\n\n  return (\n    <Grommet theme={theme}>\n      <Notifications />\n      <Router>\n        <AppBar>\n          <Box direction='row' align='center'>\n            <img\n              style={{ height: 60, width: 70 }}\n              src={Logo}\n              alt='Node Rockets Logo'\n            />\n          </Box>\n          <Box margin='medium'></Box>\n          <Box alignSelf='end' direction='row' align='center'>\n            <TextInput\n              id='base'\n              placeholder='IP of Pi'\n              value={base}\n              onChange={({ target: { value } }) => {\n                setBase(value)\n                setBaseState(value)\n              }}\n            />\n            <Button\n              primary\n              margin='small'\n              onClick={() => window.location.reload()}\n              label='Refresh!'\n            />\n          </Box>\n        </AppBar>\n        <Switch>\n          <Route exact path='/' component={Home}></Route>\n          <Route path='/other' component={Other}></Route>\n          <Route path='/launches' component={Launches}></Route>\n          <Route path='/launch/:filename' component={Launch}></Route>\n          <Route path='/strategies' exact component={Strategies}></Route>\n        </Switch>\n        <Actions />\n      </Router>\n    </Grommet>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}